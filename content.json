[{"title":"点赞神器(说说and微博管理助手)———快速送上你的赞 丨 清空年少的过往。","date":"2017-03-14T12:10:48.000Z","path":"2017/03/14/chrome-extension-dzsq/","text":"一个简单的chrome扩展，能够一键点赞说说和微博，更为重要的是能有选择的快速删除自己的说说和微博。 一、使用说明chrome浏览器下载这个.crx文件（页面上点Download按钮）拖动到chrome浏览器的扩展管理中心(chrome://extensions)，点击添加扩展程序即可安装。点击右上角即可快速使用。 其他基于chromium引擎的国内浏览器（如QQ、360）也是下载这个.crx文件将其拖入对应浏览器的扩展商店（下面链接的地方），点击添加即可使用。qq浏览器应用中心360浏览器应用市场 Microsoft Edge浏览器考虑到现在有许多小伙伴们都在使用win10自带的edge浏览器，所以特意将扩展也对edge做了兼容，使用方法如下:在这个下载地址点击Clone or download下载ZIP文件，解压后打开Edge的配置页面，勾选上第四项的开发人员扩展功能，随后点击在Edge浏览器中的扩展 即可选择加载扩展，选择刚才解压后的文件夹便能加载并使用扩展了。 Firefox浏览器因为火狐的扩展所用API跟chrome不尽相同，所以要做到兼容又需要研读一遍firefox extension的开发文档，自己已力不从心，便不在深入了。所以请使用Firefox的小伙伴移步上面的浏览器。 IE （see you~） To view this video please enable JavaScript, and consider upgrading to a web browser that supports HTML5 vid 使用视频 3.11MB 重要提醒：保护说说是指保护当前所有说说最上面的那条，并且点一下依次往下添加一条，然后保护后不要刷新，，刷新会重置保护，，点一键删除就会真的全白了。。。 二、写写感悟动机过年前看完了一本关于Javascript DOM 编程的书，一方面让自己对浏览器的DOM相关API有了更为深刻的理解，另一方面也对自己之前浅尝辄止的学习习惯懊悔不已，这个习惯造就我只是在网上接受一些空洞的概念，而十分缺少了实践的能力。 所谓学时醍醐灌顶，用时四大皆空。 —by myself 属于阅过即忘的视频式教学更加助长了这个坏习惯。年前剩了点余钱，一下购买了5本书籍，趁着心情的超低落期，一周便读完了这本并实践了其中的示例，欣喜发现读书读进去的快感和满足[严肃脸]，更为重要的是发现了地毯式学习的重要性，又回到脚踏实地四字身上。 新知识全都堆在脑子里，还没等到加以实践，就放假回了家，什么实践也就置之脑后了。过年只学会打麻将后转眼便又回了学校，忙忙碌碌趁开学跑了半个成都的大学后，又坐在了凳子上，一拍脑袋，感觉应该把上次那书本所学知识转化一下。霎时脑中化合物神经元抱作一团，后竟产生神奇的化合反应，不断向我传达着某种信息，这个信息不断具象化，以至于竟能清晰看见它在脑中的模样——做个能删说说的扩展吧。 嗯，编不来了，其实就是随便想到的而已。 制作过程整个制作周期有一周，但真正所用的时间加起来其实不过一下午。首先是了解整个开发的进程，找到突破口，遂先搜索一下自己的想法，轻车熟路的在问题后面加上了site:zhihu，在里面一晃一小时后终于出来了。只得到两个有用的链接（其实有这两个基本就够了），一个是关于chrome扩展的官方文档，一个是一本关于chrome扩展开发实践的书。因为官方文档是全英文的，自己看水平不够，划词翻译太慢，后google之中文文档，果真寻得一份。因为有前端基础，研读两小时后便大概知道这次自己做的扩展需要的东西和时间了。 第二天晚上便完成了一键删除的功能，本想就此打住，但最近刚好上到软件工程基础的课，讲到一个软件的生命周期，挺多的，赘述也想不起了，半知半解知道开发这才完成一半不到。还有更头疼的测试，一测试又是一个接一个的error，不知其然，弃之，上b站。 过了几天闲得无聊又来做，决定上stackoverflow划词翻译找找答案，机会留给会用翻译插件的人，果真在上面找到了解决办法。解决之后又开始作，决定加个忽略删除当前说说的功能，好让空间不会一下变成白板。一作又把自己绕进去了，当晚就在stackoverflow上一直右键翻译了。好在终于简单实现了，想到既然做了说说的，干脆把微博的也做了吧，好在实现原理差不多，只用了前面百分之十的时间便完成了。 去跑了几天步回来再试试自己的扩展，竟然神奇般的无法使用，在室友电脑上又可以使用，百思不得解，直到发现空间点赞图标的手粗了一圈，才意识到空间本身升级了，传输协议也从http变成了https（嗯，加密传输的时代来了），不过幸好是换汤不换药，只是协议和图标变了下，扩展的配置文件改下，又能使用了。三天打渔，一周晒网，至此也算是完成了，便着手写这文档。 技术相关制作涉及的技术都非常简单。我大致说下思路，我们平常手动删除说说会触发两个事件，一个是点击删除按钮（其实是a标签），第二个是点击弹出的确认窗口的确定按钮，所以现在只需要用js模拟实现这两个事件即可。查询到两个按钮的标签对象，执行click方法，即可完成手动点击相同的效果。核心代码如下，在说说页面将其拷贝至浏览器控制台，回车即可删除全部说说。123456789function del() &#123;document.querySelector('.app_canvas_frame').contentDocument.querySelector('.del_btn').click();setTimeout(\"yes()\", 1000);&#125;function yes() &#123;document.querySelector('.qz_dialog_layer_btn').click();setTimeout(\"del()\", 4000);&#125;del(); 核心代码有了现在就是封装置扩展里面，扩展程序本身不能够操作网页页面的DOM，需要依靠扩展提供的content script（加载时同页面本身js一同加载，如同新添加的script,与其他js不共享作用域）。按照制作文档给出的最简单的配置文件（manifest.json）调整成自己的配置，需要注意的是添加content script匹配。123456 \"content_scripts\": [ &#123; \"matches\": [\"*://user.qzone.qq.com/*\",\"*://weibo.com/*\"], \"js\": [\"js/delete.js\"] &#125;] 扩展的界面(popup.html)我只粗略的加了几个按钮，使用最粗暴的交互界面，没有说的。最后是连接界面与content script，需要使用chrome extensions提供的消息传递API，在扩展的js里监听按钮的点击事件然后发送消息给content script，如下是扩展js的核心代码。1234567document.getElementById(\"delete\").addEventListener(\"click\", function()&#123; //监听id为delete的元素的鼠标点击事件，并执行回调函数 chrome.tabs.query(&#123;active: true, currentWindow: true&#125;, function(tabs)&#123; //发送消息\"delete\" chrome.tabs.sendMessage(tabs[0].id, &#123;message:\"delete\"&#125;, function(response) &#123; console.log(response.result); &#125;);&#125;);&#125;); content script中接受消息，判断消息内容并执行相应的函数，即完成整个过程。123456chrome.extension.onMessage.addListener( function(request, sender, sendResponse) &#123; if (request.message == \"delete\") &#123; del_q(); sendResponse(&#123; result: \"delete success\" &#125;) &#125; 梳理下来这个扩展的框架大概就是这样，非常简单，接下来重要的事情其实就是书写这个函数，需要做一些兼容判断，比如在我的主页页面删除说说时，a标签的classname会改变，需要做一下if else。后面几个功能的扩展不做赘述，核心理解了，其他很容易实现。 使用意义既是拍脑袋决定，也就没有想着能有多少受众。制作完毕后发布内测，一人表示会使用，六人表示不会，六人中还包括自己。虽说有过删完所有黑历史 的想法，但最后还是没舍得，毕竟这也是一份回忆，我想有很多人都会有这种想法，所以又特地去增加了保护说说的功能，能让使用的时候有些余地，把好的保留，把想去掉的删除。 拥抱开源说实话，这么小的东西开源谈不上，但一方面看到自己github仓库寥寥无几的项目，蚊子再小也是肉，便腆着老脸传到自己github仓库里去了；另一方面感觉这个扩展也不是全无用处，它其实可以引申出一种方向，便是做社交快速化管理，后面方向太大，请小伙伴们自行想象。于是想通过github，用开源协作这种群众们喜闻乐见的方式，让更多对这个有兴趣的小伙伴对其进行改进和升级（最不济也可以把那个毫无诚意的按钮界面改一下）。就这样，感谢有耐心的你还能读到这，第一次写这类文章，感谢升华了，感恩。","tags":[{"name":"-技术类 -chrome extension","slug":"技术类-chrome-extension","permalink":"http://wynode.com/tags/技术类-chrome-extension/"}]}]