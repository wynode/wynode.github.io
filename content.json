[{"title":"笔试题目总结。","date":"2017-11-06T12:42:56.000Z","path":"2017/11/06/mianshi/","text":"最近跟着一个小伙伴一起在跑宣讲会，做了两套笔试题，发现自己平时学习上的一些基础知识的欠缺，故此做个总结。 1.nullnull &gt;/&lt; 0 // null 尝试转型为number , 则为0 . 所以结果为 false,null &gt;=/&lt;= 0 // null 尝试转为number ,则为0 , 结果为 true.null == 0 // null在设计上，在此处不尝试转型. 所以 结果为false. 2.XMLHttpRequestXMLHttpRequest 对象用于在后台与服务器交换数据。XMLHttpRequest 对象是开发者的梦想，因为您能够：在不重新加载页面的情况下更新网页在页面已加载后从服务器请求数据在页面已加载后从服务器接收数据在后台向服务器发送数据所有现代的浏览器都支持 XMLHttpRequest 对象。 3.数组去重 unique123456789101112131415Array.prototype.unique = function()&#123; var res = []; var json = &#123;&#125;; for(var i = 0; i &lt; this.length; i++)&#123; if(!json[this[i]])&#123; //利用对象属性的方式查找。 res.push(this[i]); json[this[i]] = 1; &#125; &#125; console.log(json); return res;&#125;var arr = [112,112,34,'你好',112,112,34,'你好','str','str1'];alert(arr.unique()); 4.Date123console.log(new Date()) // Tue Nov 07 2017 09:04:00 GMT+0800 (中国标准时间) //天数前面有0！！ getDay() 返回一周（0~6）的某一天的数字。 星期天为 0, 星期一为 1, 以此类推。getDate() 返回一个月中的某一天 (1 ~ 31)。 天数前面没0！！getFullYear() 以四位数字返回年份。getMonth() 返回月份 (0 ~ 11)。 需要加1 重要！！！getHours() 返回小时 (0 ~ 23)。 5.时间复杂度二分查找法的时间复杂度：O(log n)冒泡排序、选择排序、插入排序都为 O(n2) n的平方希尔排序、归并排序、快速排序、堆排序都为 O(n log n)稳定性：只有冒泡和插入排序是稳定的 其他都是不稳定的 6.冰鉴最后一题字母变成相邻字母，标点符号不变，结果如果是元音字母则大写。先行知识：①String对象方法 split() 把字符串分割为字符串数组。 charAt() 返回在指定位置的字符。 charCodeAt() 返回在指定的位置的字符的 Unicode 编码。 String.fromCharCode() 从字符编码创建一个字符串。 toUpperCase() 把字符串转换为大写。 ②运算符优先级(从高到低) [] () 字段访问、数组下标、函数调用以及表达式分组 ++ – - ~ ! delete new typeof void 一元运算符、返回数据类型、对象创建、未定义值 / * % 除法、乘法、取模 加法、减法、字符串连接 &lt;&lt; &gt;&gt; &gt;&gt;&gt; 移位 &lt; &lt;= &gt; &gt;= instanceof 小于、小于等于、大于、大于等于、instanceof == != === !== 等于、不等于、严格相等、非严格相等 &amp; 按位与 ^ 按位异或 | 按位或 &amp;&amp; 逻辑与 || 逻辑或 ?: 条件 123456789101112131415161718192021222324function LetterChanges(str) &#123; str=str.split(\"\");//将字符串变成数组 for(i=0;i&lt;str.length;i++)&#123; str[i]=str[i].charCodeAt();//将数组里的字符变成ASCll码 if(65&lt;=str[i] &amp;&amp; str[i]&lt;=90 || 97&lt;=str[i] &amp;&amp; str[i]&lt;= 122)&#123;//通过ASCll码判断字符的类型，用分支结构将其分类处理 if(str[i]==100||str[i]==104||str[i]==110||str[i]==116)&#123;//这是元音字母，需要大写 str[i]=String.fromCharCode(str[i]-31); &#125; else if(str[i]==90 || str[i]==122)&#123;//Z、z变成A str[i]=\"A\"; &#125; else&#123; str[i]=String.fromCharCode(str[i]+1); &#125; &#125; else&#123; str[i]=String.fromCharCode(str[i]);//这些全是标点符号，也许标点符号形容得不贴切，反正他们不是字母 &#125; &#125; str=str.join(\"\");//将处理好的数组变回字符串 return str; &#125;var ceshi=LetterChanges(\"zZ&#123;aA[\\`‘ment goes here\");//取边界值测试document.write(ceshi); 7.数据库事务的四大特性 原子性 指事务包含的所有操作要么全部成功，要么全部失败回滚 一致性 指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。 隔离性 当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。 持久性 指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。 8.关系操作符&lt; &gt; &lt;= &gt;= ==在进行比较时。①如果两个操作数都是数值，则执行数值比较。②如果两个操作数都是字符串，则比较两个字符串对应的字符编码值。③如果一个操作数是数值，则奖另一个操作数转换为一个数值，如果执行数值比较。④如果一个操作数是对象，则调用这个对象的valueOf()方法，没有则调用toString()方法，用结果根据前面规则执行比较。⑤如果一个操作数是布尔值，则先将其转换为数值，然后再执行比较。同一优先级操作符从左到右计算。 9.js常用的设计模式 单体模式 工厂模式 单例模式 观察者模式 策略模式 模板模式 代理模式 外观模式参考资料：https://www.cnblogs.com/xianyulaodi/p/5827821.html#_label3 #####10.获取浏览器信息 1234567891011121314151617181920212223242526272829//navigator.userAgent获取浏览器信息function getExplorerInfo() &#123;var explorer = window.navigator.userAgent.toLowerCase() ;//ie if (explorer.indexOf(\"msie\") &gt;= 0) &#123; var ver=explorer.match(/msie ([\\d.]+)/)[1]; return &#123;type:\"IE\",version:ver&#125;;&#125;//firefox else if (explorer.indexOf(\"firefox\") &gt;= 0) &#123; var ver=explorer.match(/firefox\\/([\\d.]+)/)[1]; return &#123;type:\"Firefox\",version:ver&#125;;&#125;//Chromeelse if(explorer.indexOf(\"chrome\") &gt;= 0)&#123; var ver=explorer.match(/chrome\\/([\\d.]+)/)[1]; return &#123;type:\"Chrome\",version:ver&#125;;&#125;//Operaelse if(explorer.indexOf(\"opera\") &gt;= 0)&#123;var ver=explorer.match(/opera.([\\d.]+)/)[1];return &#123;type:\"Opera\",version:ver&#125;;&#125;//Safarielse if(explorer.indexOf(\"Safari\") &gt;= 0)&#123;var ver=explorer.match(/version\\/([\\d.]+)/)[1];return &#123;type:\"Safari\",version:ver&#125;;&#125;&#125; 11.提升页面性能的方法 资源压缩合并，减少HTTP请求 非核心代码异步加载（动态脚本加载 defer async） 利用浏览器缓存 使用CDN 预解析DNS12.跨域通信的几种方式 jsonp（利用src的callback函数） hash （利用window.location.hash传值，在有iframe的情况下） postMessage websocket CORS document.domain + iframe window.name + ifram","tags":[{"name":"-笔试 -Web前端","slug":"笔试-Web前端","permalink":"http://wynode.com/tags/笔试-Web前端/"}]},{"title":"基于 vue2 + vuex 构建的一个应用---网上书城。","date":"2017-10-22T12:42:56.000Z","path":"2017/10/22/mall/","text":"前端使用vue全家桶实现，服务端使用node+express+mongodb的组合，MEVN架构的一次实践。 一、前言一个多月零零散散的时间，终于是把这个项目完成了。这也是自己第一个用完整框架技术栈搭建的项目，对比之前自己在Sublime里手写每一行代码的刀耕火种的日子，用框架实在是舒服很多。代价也是明显的，你需要去适应另一种编码方式，常常也是右边Sublime，左边搜索引擎。 你可以通过这个网址（120.78.169.44）访问到我的项目（PC端和移动端均可）。 二、项目截图PC端移动端 三、技术栈前端：vue2 + vuex + vue-router + axios + webpack + ES6服务端：nodejs + express + mongoose数据库： mongodb 四、实现功能 登录 加入购物车 购物车操作 配送地址操作 订单确认 订单ID生成五、使用跟大多数node项目一样12345git clone https://github.com/wynode/book-mall.gitcd bool-mallcnpm installnode server/bin/wwwcnpm start 六、总结1、整个项目写下来，感觉对vue全家桶的理解能算是入门了。状态管理的vuex，路由的vue-router，http客户端的axios加上vue本身的components和computed等等特性的使用，对于常规的建站甚至是大型的单页面项目已经是足够了。如果说与react和angular相比孰优孰劣我是没有资格去评判的，其他两种中我所接触了解的angular还停留在angular2上面（其控制器的实现真的是用冗长来形容），而现在angular已经做到了5.x,有了很大的变革，但由于没有向下兼容，加上迭代更新速度太快，所以流失的用户是相当多。而react还在我的下一个学习目标中，所以vue暂时在我心中算最好的前端框架吧。 2、更重要的是前后分离的概念在我的心中更加的明确。开发阶段如果不是只有我一个人写，完全可以一个人写前端，一个写后端，最后上线方面，服务端的代码和前端代码的分开部署，互不干扰，让我体会到一个完整的项目应该有的样子。 七、代码我将代码上传到我的github主页了，欢迎fork。","tags":[{"name":"-技术类 -vue全家桶 -nodejs+express+mongodb","slug":"技术类-vue全家桶-nodejs-express-mongodb","permalink":"http://wynode.com/tags/技术类-vue全家桶-nodejs-express-mongodb/"}]},{"title":"地图相册2.0。","date":"2017-10-15T14:42:56.000Z","path":"2017/10/15/mapalbum/","text":"一个大大的地图相册，记录你的足迹。 一、使用PC端点击这个网址(wynode.com/map)进入应用。在地图上任意一点点击右键添加一个相册，上传相册的封面，即可创建一个地图相册点。当鼠标移动到封面时，点击封面右上角的关闭（X）按钮将会删除这个相册。鼠标左键点击封面进入相册，点击上传照片就可以往相册里面继续添加照片（可直接拖拽照片到相册中）。一个相册里可无限量添加照片。 二、说明上传的照片并没有上传到服务器，而是存在了本地的客户端，所以不存在照片隐私的泄露，他们都在你的浏览器的“数据库”里。照片的存储空间在理论上来说是没有上限的，所以尽情存储吧。但是有一点必须说明，当你的封面照片太大且太多时，会影响页面的打开速度，所以建议尽量用较小的封面图片。 三、改变相比于之前地图相册1.0的版本，核心的存储因为从localstorage过度到indexedDB，相册的容量得到了跃升。相册的浏览做了改变，从只能存储并浏览三张变成了可以无线存储和浏览。在上图中没有展现出来，有兴趣的可以试试哦。 四、技术整理使用到的主要技术： 百度地图Javascript API ondrop事件 FileReader indexedDB 五、源码分享关于源码我已经上传到我的github，欢迎Star或者给我提Issue","tags":[{"name":"-技术类 -baiduditu API -WEB","slug":"技术类-baiduditu-API-WEB","permalink":"http://wynode.com/tags/技术类-baiduditu-API-WEB/"}]},{"title":"Sublime Text3（3143） 使用笔记（1）。","date":"2017-09-25T14:42:56.000Z","path":"2017/09/25/sublime/","text":"这个五彩的Sublime Text是你掉的吗？ 转眼使用Sublime也有两年多了，从3065到3143，期间转投过Atom和VSCode（现在也在使用），纵然Sublime小毛病不断，但它小巧而强大的功能让人爱不释手，怎么会忍心点下uninstall。9月13号Sublime发布了一个重大更新，版本从3126跃升至3143，我第一时间点下了Download，然后。。变成了五彩版（成功鄙视了一次windows用户）。 之后去下了便携版才能正常使用。用上新版后感慨万分，这两年Sublime这个闭源大佬真是…一点进步都没有，两年多换了个Logo和界面，其他照旧。不过谁叫它一开始就走出了自己的风格，并且使用户喜欢上了这种风格呢。 一、使用快捷键Sublime一个强大的功能便是快捷键植入，在熟悉了Sublime的快捷键之后，你很难再去适应其他编辑器或者IDE的快捷键。值得庆幸的是现在很多IDE中都支持切换至Sublime的快捷键，熟悉一套快捷键之后，可以很快上手其他前端开发工具。平时使用中虽然只用到了很少一部分，但已经，例举一些自己常用的快捷键。 Ctrl+Enter 在下一行插入新行。 Ctrl+/ 注释单行。 Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本（下图）。 Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。 Ctrl+M 光标移动至括号内结束或开始的位置。 Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑（下图）。 Ctrl+Shift+A 光标在文本上时将选择文本，将选择父容器,再按,将选择父容器的父容器（下图）。 Ctrl+Shift+D 如果你已经选中了文本,它会复制你的选中项。否则,把光标放在行上,会复制整行。 Ctrl+[ 或 ] 增加和减少缩进 Alt+Shift+W 用标签包裹行或选中项 Ctrl+/ 注释选中项/行以上都是我经常使用的快捷键，在熟悉之后我发现开发效率的提升是明细的，而且很容易就从快捷键的熟练程度看出一个人开发经验是否充足。所以需要多多练习啊。 二、使用插件无可置疑，Sublime之所以如此受欢迎，插件需要分到一半多的功劳。使用插件让我们可以减少很多繁琐的开发细节，让我们更好的投入到开发本身，网上关于Subilime插件的介绍也比比皆是，在这里我只列举我经常使用的并且好用的几个插件。 安装插件的前提是需要安装Package Control，顾名思义，这就是插件（包）的管理工具，有了它才能进行插件的安装和删除。使用Ctrl+`或者直接点击工具栏View的Show Console呼出控制台界面，在里面输入 官网对应的安装源代码安装成功后使用Ctrl+Shift+P呼出Package Control 选择Install Package就可以进行插件的安装了(删除也是在这，选择Remove Package)。下面是我常用几个插件。 Emmet //快速生成和编写HTML代码 最受欢迎的前端开发插件，没有之一。安装成功后快捷键Tab或者Ctrl+e JsFormat //JS格式化 在JS文件中通过鼠标右键-&gt;JsFormat或键盘快捷键Ctrl+Alt+F对JS进行格式化 SideBarEnhancements //右键菜单增强以及浏览器预览快捷键 使用这个插件的最重要的原因就是解救我的鼠标，通过快捷键设置可以实现在不同浏览器中预览，可以参考我的设置。1234567891011121314151617181920212223242526[ //qqBrowser &#123; &quot;keys&quot;: [&quot;f1&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;S:\\\\Tencent\\\\QQBrowser\\\\QQBrowser.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; //匹配任何文件类型 &#125; &#125;, //chrome &#123; &quot;keys&quot;: [&quot;f2&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; &#125; &#125;, //ie &#123; &quot;keys&quot;: [&quot;f3&quot;], &quot;command&quot;: &quot;side_bar_files_open_with&quot;, &quot;args&quot;: &#123; &quot;paths&quot;: [], &quot;application&quot;: &quot;C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe&quot;, &quot;extensions&quot;:&quot;.*&quot; &#125; &#125;] AutoFileName //自动提示文件路径 我认为非常有必要的一个插件，在做图片的src的时候尤甚。 Terminal //在项目中的当前位置打开命令行窗口 使用快捷键Ctrl+Shift+T或者右键选择来呼出命令行窗口。在做Node项目或者使用框架开发的时候会经常使用到这个插件。 ConvertToUTF8 //转码成utf-8，解决乱码 Bracket Highlighter //匹配括号 Alignment //自动对齐代码 最后是两个开发神器 LiveReload //自动刷新，完美替代F5 LiveStyle //在浏览器控制台修改的CSS代码能自动保存到css文件中 两个插件都需要安装所对应的浏览器扩展。工具栏的倒数第一个扩展就是LiveReload，点击为实心圆之后便为开启状态，在Sublime中修改代码后Ctrl+Sb保存就可以在浏览器中实时刷新。倒数第二个为LiveStyle，选择需要关联的css文件，点击按钮便开启功能。今天就先介绍Sublime快捷键和插件，下篇笔记再总结一些复杂的使用技巧。 #####参考资料：http://blog.jobbole.com/82527/https://www.zhihu.com/question/24736400","tags":[{"name":"-工具类 -Sublime Text3","slug":"工具类-Sublime-Text3","permalink":"http://wynode.com/tags/工具类-Sublime-Text3/"}]},{"title":"音乐可视化---跟上音乐的节拍。","date":"2017-08-20T12:42:56.000Z","path":"2017/08/20/music/","text":"音乐也可以用来看。 一、使用PC端或者移动端点击这个网址(wynode.com/music)进入主界面主界面当中有两个功能选项。 通过上传文件（可直接拖拽音乐到页面）向页面添加一首音乐进行可视化，在页面显示出音乐的名字后点击开始播放。 使用麦克风作为输入源进行可视化。 二、过程大抵从很早听MP3的时候就产生的想法———一首音乐究竟是由什么组成的，MP3上炫酷的随音乐波动画面是怎么做到的。 直到后面学了计算机，才了解到一点，计算机里的万物皆会化为二进制。所以我们听到的音乐，在计算机看来只是一长串的二进制数据，再思考随音乐的波动画面，便不能推出，那只是一串二进制转化为不同高度的频段图。 大二一个偶然的机会看到了一个音乐可视化网站3D的可视化效果非常惊艳，梦想着自己有一天也能做一个这么酷炫的网站。随着前端学习的不断深入，我感觉到是时候实现梦想的第一步了。通过各种搜索引擎找到自己需要了解的技术，一步步学习，最后简单实现了一个小demo。就是这个了。 三、技术整理全站主要用到的技术： AudioContext Canvas FileReader navigator的getUserMedia方法 参考资料：https://developer.mozilla.org/zh-CN/docs/Web/API/AudioContext // AudioContext - Web API 接口http://www.cnblogs.com/Wayou/p/3543577.html //简单的音乐可视化全过程https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial //Canvas的基本使用 四、源码这个项目的源码我已经上传到我的github上，欢迎大家给我提Issue。","tags":[{"name":"-技术类 -AudioContext -WEB","slug":"技术类-AudioContext-WEB","permalink":"http://wynode.com/tags/技术类-AudioContext-WEB/"}]},{"title":"JavaScript编程题 —— 数组篇","date":"2017-07-12T12:45:57.000Z","path":"2017/07/12/javascript-array-md/","text":"最近跟着腾讯的IMWeb前端进行秋招训练，把每天会练习到的编程题做个总结。以下是第一天的练习，主要练到数组编程。 1.找出元素 item 在给定数组 arr 中的位置。如果数组中存在 item，则返回元素在数组中的位置，否则返回 -112345678function indexOf(arr, item) &#123; for(var i = 0; i &lt; arr.length; i++)&#123; if(arr[i] == item)&#123; return i; &#125; &#125; return -1;&#125; 2.计算给定数组 arr 中所有元素的总和 （数组中的元素均为 Number 类型）123function sum(arr) &#123; return eval(arr.join('+')); //eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码; 3.移除数组 arr 中的所有值与 item 相等的元素。不要直接修改数组 arr，结果返回新的数组123456789function remove(arr, item) &#123; var arr1 = []; for(i = 0;i &lt; arr.length; i++)&#123; if(arr[i] != item)&#123; arr1.push(arr[i]); &#125; &#125; return arr1;&#125; 4.移除数组 arr 中的所有值与 item 相等的元素，直接在给定的 arr 数组上进行操作，并将结果返回12345678910function removeWithoutCopy(arr, item) &#123; for(i = 0; i &lt; arr.length; i++)&#123; if(arr[i] == item)&#123; arr.splice(i,1); //考虑数组长度。去掉i个重复元素，数组长度-i i--; &#125; &#125; return arr;&#125; 5.在数组 arr 末尾添加元素 item。不要直接修改数组 arr，结果返回新的数组12345function append(arr, item) &#123; var arr1 = []; arr1 = arr.concat([item]); return arr1;&#125; 6.删除数组 arr 最后一个元素。不要直接修改数组 arr，结果返回新的数组12345function truncate(arr) &#123; return arr.slice(0, -1);//slice：指定一个数组中的元素，创建一个新的数组原数组不变//splice：对数组原身的操作，返回值为被操作的值&#125; 7.在数组 arr 开头添加元素 item。不要直接修改数组 arr，结果返回新的数组123function prepend(arr, item) &#123; return [item].concat(arr);&#125; 8.删除数组 arr 第一个元素。不要直接修改数组 arr，结果返回新的数组123function curtail(arr) &#123; return arr.slice(1);&#125; 9.合并数组 arr1 和数组 arr2。不要直接修改数组 arr，结果返回新的数组123function concat(arr1, arr2) &#123; return arr1.concat(arr2);&#125; 10.合并数组 arr1 和数组 arr2。不要直接修改数组 arr，结果返回新的数组\\123function concat(arr1, arr2) &#123; return arr1.concat(arr2);&#125; 11.在数组 arr 的 index 处添加元素 item。不要直接修改数组 arr，结果返回新的数组12345678910111213function insert(arr, item, index) &#123; return arr.slice(0,index).concat(item).concat(arr.slice(index));&#125;12.统计数组 arr 中值等于 item 的元素出现的次数function count(arr, item) &#123; var num = 0; for(var i = 0; i &lt; arr.length; i++)&#123; if(arr[i] == item)&#123; num ++; &#125; &#125; return num;&#125; 13.找出数组 arr 中重复出现过的元素123456789function duplicates(arr) &#123; var a = []; //先排序，如果后一个与前一个相等且未保存，则保存。 for(var i=0;i&lt;arr.length;i++) for(var j=i+1;j&lt;arr.length;j++)&#123; arr[i]==arr[j]&amp;&amp;a.indexOf(arr[i])==-1&amp;&amp;a.push(arr[i]); &#125; return a;&#125; 14.为数组 arr 中的每个元素求二次方。不要直接修改数组 arr，结果返回新的数组1234567function square(arr) &#123; var a = []; for(var i = 0; i&lt; arr.length; i++)&#123; a[i] = arr[i] * arr[i]; &#125; return a;&#125; 15.在数组 arr 中，查找值与 item 相等的元素出现的所有位置123456789function findAllOccurrences(arr, target) &#123; var a = []; for(var i = 0; i &lt; arr.length; i++)&#123; if(target == arr[i])&#123; a.push(i); &#125; &#125; return a;&#125;","tags":[{"name":"-JavaScript -数组","slug":"JavaScript-数组","permalink":"http://wynode.com/tags/JavaScript-数组/"}]},{"title":"使用百度地图API创建的一个小应用————地图相册。","date":"2017-04-02T14:42:56.000Z","path":"2017/04/02/mapalbum-md/","text":"一个小小的地图相册，记录你的足迹。 一、食用说明PC端点击这个网址(wynode.com/map)就进入了主界面（也是唯一的页面..）。右键点击地图上任意点就可以在地图上添加照片，注意分横屏和竖屏照片上传，好让图片显示不会变形。添加完成后可以点击查看，或者点右上角删除。 !!!因为整个应用只有前端，所以照片的存储用的是HTML5自带的本地存储localStorage，有内存限制，只有5M大小，但照片又只能缓存为DataURL的形式，又把照片的体积加大了三分之一，所以留给存照片的空间只剩下了3M，大概就15张200kb大小的照片。所以不要上传大于1M的照片。。。刷新就没了。。。 photoshop教学时间既然网页只有3M左右的存储空间，相对于我们平时一张就是几十M的照片而言，肯定是不行的。那么怎么办呢~~ 还好大一迷恋过Adobe全家桶，学过点ps。所以给大家演示一下怎么用ps最简单的批量压缩照片吧。 首先在桌面或者其他位置新建两个文件夹，一个作为照片输入，一个作为输出，在两个文件夹里再创建两个子文件夹，将照片按横屏和竖屏进行分类。然后打开ps，点击窗口–&gt;动作（或者Alt+F9）呼出动作窗口，然后点击倒数第二个小图标，创建新动作，输入动作名称（现在对横屏照片进行处理，就命名为横吧）。点击文件–&gt;打开，打开输入文件夹里的照片，再点击图像–&gt;图像大小设置图像的像素大小。这里呢建议横屏照片设置宽度950px,竖屏呢设置宽度630px,然后高度等比就行了。不要问我什么，，因为在相册里点击后的照片大小差不多这么大。之后点击文件–&gt;存储为存到输出文件夹里就行了，选择品质的时候注意一下，大概选到9好一点，因为刚好200k左右。之后点击结束动作录制，再点击文件–&gt;自动–&gt;批处理。注意这些小细节。点击确定然后去等着收文件就好了。 懒癌发作，自己的代码也不敢再看了，所以没有感悟，没有技术剖析。 完~~","tags":[{"name":"-技术类 -baiduditu API -WEB","slug":"技术类-baiduditu-API-WEB","permalink":"http://wynode.com/tags/技术类-baiduditu-API-WEB/"}]},{"title":"点赞神器(说说and微博管理助手)———快速送上你的赞 丨 清空年少的过往。","date":"2017-03-14T12:10:48.000Z","path":"2017/03/14/chrome-extension-dzsq/","text":"一个简单的chrome扩展，能够一键点赞说说和微博，更为重要的是能有选择的快速删除自己的说说和微博。 一、使用说明chrome浏览器下载这个.crx文件（页面上点Download按钮）拖动到chrome浏览器的扩展管理中心(chrome://extensions)，点击添加扩展程序即可安装。点击右上角即可快速使用。 其他基于chromium引擎的国内浏览器（如QQ、360）也是下载这个.crx文件将其拖入对应浏览器的扩展商店（下面链接的地方），点击添加即可使用。qq浏览器应用中心360浏览器应用市场 Microsoft Edge浏览器考虑到现在有许多小伙伴们都在使用win10自带的edge浏览器，所以特意将扩展也对edge做了兼容，使用方法如下:在这个下载地址点击Clone or download下载ZIP文件，解压后打开Edge的配置页面，勾选上第四项的开发人员扩展功能，随后点击在Edge浏览器中的扩展 即可选择加载扩展，选择刚才解压后的文件夹便能加载并使用扩展了。 Firefox浏览器因为火狐的扩展所用API跟chrome不尽相同，所以要做到兼容又需要研读一遍firefox extension的开发文档，自己已力不从心，便不在深入了。所以请使用Firefox的小伙伴移步上面的浏览器。 IE （see you~） To view this video please enable JavaScript, and consider upgrading to a web browser that supports HTML5 vid 使用视频 3.11MB 重要提醒：保护说说是指保护当前所有说说最上面的那条，并且点一下依次往下添加一条，然后保护后不要刷新，，刷新会重置保护，，点一键删除就会真的全白了。。。 二、写写感悟动机过年前看完了一本关于Javascript DOM 编程的书，一方面让自己对浏览器的DOM相关API有了更为深刻的理解，另一方面也对自己之前浅尝辄止的学习习惯懊悔不已，这个习惯造就我只是在网上接受一些空洞的概念，而十分缺少了实践的能力。 所谓学时醍醐灌顶，用时四大皆空。 —by myself 属于阅过即忘的视频式教学更加助长了这个坏习惯。年前剩了点余钱，一下购买了5本书籍，趁着心情的超低落期，一周便读完了这本并实践了其中的示例，欣喜发现读书读进去的快感和满足[严肃脸]，更为重要的是发现了地毯式学习的重要性，又回到脚踏实地四字身上。 新知识全都堆在脑子里，还没等到加以实践，就放假回了家，什么实践也就置之脑后了。过年只学会打麻将后转眼便又回了学校，忙忙碌碌趁开学跑了半个成都的大学后，又坐在了凳子上，一拍脑袋，感觉应该把上次那书本所学知识转化一下。霎时脑中化合物神经元抱作一团，后竟产生神奇的化合反应，不断向我传达着某种信息，这个信息不断具象化，以至于竟能清晰看见它在脑中的模样——做个能删说说的扩展吧。 嗯，编不来了，其实就是随便想到的而已。 制作过程整个制作周期有一周，但真正所用的时间加起来其实不过一下午。首先是了解整个开发的进程，找到突破口，遂先搜索一下自己的想法，轻车熟路的在问题后面加上了site:zhihu，在里面一晃一小时后终于出来了。只得到两个有用的链接（其实有这两个基本就够了），一个是关于chrome扩展的官方文档，一个是一本关于chrome扩展开发实践的书。因为官方文档是全英文的，自己看水平不够，划词翻译太慢，后google之中文文档，果真寻得一份。因为有前端基础，研读两小时后便大概知道这次自己做的扩展需要的东西和时间了。 第二天晚上便完成了一键删除的功能，本想就此打住，但最近刚好上到软件工程基础的课，讲到一个软件的生命周期，挺多的，赘述也想不起了，半知半解知道开发这才完成一半不到。还有更头疼的测试，一测试又是一个接一个的error，不知其然，弃之，上b站。 过了几天闲得无聊又来做，决定上stackoverflow划词翻译找找答案，机会留给会用翻译插件的人，果真在上面找到了解决办法。解决之后又开始作，决定加个忽略删除当前说说的功能，好让空间不会一下变成白板。一作又把自己绕进去了，当晚就在stackoverflow上一直右键翻译了。好在终于简单实现了，想到既然做了说说的，干脆把微博的也做了吧，好在实现原理差不多，只用了前面百分之十的时间便完成了。 去跑了几天步回来再试试自己的扩展，竟然神奇般的无法使用，在室友电脑上又可以使用，百思不得解，直到发现空间点赞图标的手粗了一圈，才意识到空间本身升级了，传输协议也从http变成了https（嗯，加密传输的时代来了），不过幸好是换汤不换药，只是协议和图标变了下，扩展的配置文件改下，又能使用了。三天打渔，一周晒网，至此也算是完成了，便着手写这文档。 技术相关制作涉及的技术都非常简单。我大致说下思路，我们平常手动删除说说会触发两个事件，一个是点击删除按钮（其实是a标签），第二个是点击弹出的确认窗口的确定按钮，所以现在只需要用js模拟实现这两个事件即可。查询到两个按钮的标签对象，执行click方法，即可完成手动点击相同的效果。核心代码如下，在说说页面将其拷贝至浏览器控制台，回车即可删除全部说说。123456789function del() &#123;document.querySelector('.app_canvas_frame').contentDocument.querySelector('.del_btn').click();setTimeout(\"yes()\", 1000);&#125;function yes() &#123;document.querySelector('.qz_dialog_layer_btn').click();setTimeout(\"del()\", 4000);&#125;del(); 核心代码有了现在就是封装置扩展里面，扩展程序本身不能够操作网页页面的DOM，需要依靠扩展提供的content script（加载时同页面本身js一同加载，如同新添加的script,与其他js不共享作用域）。按照制作文档给出的最简单的配置文件（manifest.json）调整成自己的配置，需要注意的是添加content script匹配。123456 \"content_scripts\": [ &#123; \"matches\": [\"*://user.qzone.qq.com/*\",\"*://weibo.com/*\"], \"js\": [\"js/delete.js\"] &#125;] 扩展的界面(popup.html)我只粗略的加了几个按钮，使用最粗暴的交互界面，没有说的。最后是连接界面与content script，需要使用chrome extensions提供的消息传递API，在扩展的js里监听按钮的点击事件然后发送消息给content script，如下是扩展js的核心代码。1234567document.getElementById(\"delete\").addEventListener(\"click\", function()&#123; //监听id为delete的元素的鼠标点击事件，并执行回调函数 chrome.tabs.query(&#123;active: true, currentWindow: true&#125;, function(tabs)&#123; //发送消息\"delete\" chrome.tabs.sendMessage(tabs[0].id, &#123;message:\"delete\"&#125;, function(response) &#123; console.log(response.result); &#125;);&#125;);&#125;); content script中接受消息，判断消息内容并执行相应的函数，即完成整个过程。123456chrome.extension.onMessage.addListener( function(request, sender, sendResponse) &#123; if (request.message == \"delete\") &#123; del_q(); sendResponse(&#123; result: \"delete success\" &#125;) &#125; 梳理下来这个扩展的框架大概就是这样，非常简单，接下来重要的事情其实就是书写这个函数，需要做一些兼容判断，比如在我的主页页面删除说说时，a标签的classname会改变，需要做一下if else。后面几个功能的扩展不做赘述，核心理解了，其他很容易实现。 使用意义既是拍脑袋决定，也就没有想着能有多少受众。制作完毕后发布内测，一人表示会使用，六人表示不会，六人中还包括自己。虽说有过删完所有黑历史 的想法，但最后还是没舍得，毕竟这也是一份回忆，我想有很多人都会有这种想法，所以又特地去增加了保护说说的功能，能让使用的时候有些余地，把好的保留，把想去掉的删除。 拥抱开源说实话，这么小的东西开源谈不上，但一方面看到自己github仓库寥寥无几的项目，蚊子再小也是肉，便腆着老脸传到自己github仓库里去了；另一方面感觉这个扩展也不是全无用处，它其实可以引申出一种方向，便是做社交快速化管理，后面方向太大，请小伙伴们自行想象。于是想通过github，用开源协作这种群众们喜闻乐见的方式，让更多对这个有兴趣的小伙伴对其进行改进和升级（最不济也可以把那个毫无诚意的按钮界面改一下）。就这样，感谢有耐心的你还能读到这，第一次写这类文章，感谢升华了，感恩。","tags":[{"name":"-技术类 -chrome extension","slug":"技术类-chrome-extension","permalink":"http://wynode.com/tags/技术类-chrome-extension/"}]}]